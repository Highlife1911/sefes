<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.

// ARCHIVISTS
const int ROBOTS = 1;     // total number of robots in system
typedef int[0,ROBOTS-1] robotid_t;
chan enter_lane[ROBOTS];
int target_archiv[ROBOTS];
int target_lane[ROBOTS];
int target_customer[ROBOTS];

// ARCHIVES
const int N = 2;         // total number of available Lanes
typedef int[0,N-1] id_t;
chan leave_archiv[N];
bool is_archiv_occupied[N];
bool is_returning_books[N];

// ANTEROOM
chan enter_anteroom[N];
chan leave_anteroom[N];
bool can_enter_anteroom[N];
int lowest_id[N];
int heighest_id[N];
int counter_archivists[N];

// LANES
const int M = 2; // lanes per archiv
const int total_lanes = M*N;
typedef int[0,(M*N)-1] laneid_t;
chan reserve_lane[M*N], leave_lane[N];
bool is_archivist_in_lane[total_lanes];

// MASTER
chan approve_lane;
laneid_t drive_to;
int drive_to_customer;

// TIMES
const int enter_lane_time = 10;
const int leave_archiv_time = 10;
const int search_archiv_time = 10;

// BOOKS
const int MAX_NUMBER_OF_BOOKS_PER_ROOM = 5;
int missing_books[N];

// CUSTOMERS
const int NUMBER_OF_CUSTOMERS = 3;
typedef int[0,NUMBER_OF_CUSTOMERS-1] customer_t;
chan return_book;
chan borrow_book;
chan get_book[NUMBER_OF_CUSTOMERS];
int customer;
int book_counter[NUMBER_OF_CUSTOMERS];</declaration>
	<template>
		<name>Customer</name>
		<parameter>const customer_t id</parameter>
		<location id="id0" x="-102" y="68">
			<name x="-85" y="59">Book_Loan_Step</name>
		</location>
		<location id="id1" x="-297" y="-8">
			<name x="-289" y="-34">Book_Loan</name>
		</location>
		<init ref="id1"/>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="-510" y="-51">book_counter[id] &gt; 0</label>
			<label kind="synchronisation" x="-510" y="-68">return_book!</label>
			<label kind="assignment" x="-510" y="-34">book_counter[id]--</label>
			<nail x="-518" y="-8"/>
			<nail x="-518" y="-76"/>
			<nail x="-297" y="-76"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-289" y="68">get_book[id]?</label>
			<label kind="assignment" x="-289" y="85">book_counter[id]++</label>
			<nail x="-297" y="68"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-204" y="-8">borrow_book!</label>
			<label kind="assignment" x="-204" y="8">customer=id</label>
			<nail x="-102" y="-8"/>
		</transition>
	</template>
	<template>
		<name>Anteroom</name>
		<parameter>const id_t id</parameter>
		<location id="id2" x="-552" y="-255">
			<name x="-535" y="-263">Anteroom_Counter</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-620" y="-229">leave_anteroom[id]?</label>
			<label kind="assignment" x="-620" y="-212">counter_archivists[id]--</label>
			<nail x="-535" y="-238"/>
			<nail x="-467" y="-238"/>
			<nail x="-467" y="-212"/>
			<nail x="-646" y="-212"/>
			<nail x="-646" y="-238"/>
			<nail x="-569" y="-238"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-629" y="-314">enter_anteroom[id]?</label>
			<label kind="assignment" x="-629" y="-297">counter_archivists[id]++</label>
			<nail x="-569" y="-272"/>
			<nail x="-646" y="-272"/>
			<nail x="-646" y="-297"/>
			<nail x="-467" y="-297"/>
			<nail x="-467" y="-272"/>
			<nail x="-527" y="-272"/>
		</transition>
	</template>
	<template>
		<name>Lane</name>
		<parameter>const laneid_t id</parameter>
		<declaration>clock time;

int travel_time = (id % M) * 5 + 5;
int target_archiv = id / M;</declaration>
		<location id="id3" x="-119" y="-59" color="#00ff00">
			<name x="-179" y="-67">Empty</name>
		</location>
		<location id="id4" x="289" y="68" color="#0000ff">
			<name x="306" y="60">Occupied</name>
		</location>
		<init ref="id3"/>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="-17" y="68">time&gt;=travel_time &amp;&amp;
is_archivist_in_lane[id]==true</label>
			<label kind="synchronisation" x="-17" y="51">enter_anteroom[target_archiv]!</label>
			<label kind="assignment" x="-17" y="102">can_enter_anteroom[target_archiv]=true,
is_archivist_in_lane[id]=false</label>
			<nail x="272" y="68"/>
			<nail x="280" y="68"/>
			<nail x="76" y="68"/>
			<nail x="-119" y="68"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="guard" x="-76" y="-59">can_enter_anteroom[target_archiv]==false</label>
			<label kind="synchronisation" x="34" y="-76">reserve_lane[id]?</label>
			<label kind="assignment" x="51" y="-42">time=0</label>
			<nail x="-102" y="-59"/>
			<nail x="68" y="-59"/>
			<nail x="289" y="-59"/>
		</transition>
	</template>
	<template>
		<name>Archivist</name>
		<parameter>const robotid_t id</parameter>
		<declaration>clock time;
int wait_id;</declaration>
		<location id="id5" x="-314" y="-119">
			<name x="-399" y="-127">Customer</name>
			<urgent/>
		</location>
		<location id="id6" x="-144" y="34">
			<name x="-187" y="25">Exit</name>
		</location>
		<location id="id7" x="-144" y="-255">
			<name x="-195" y="-263">Pool</name>
		</location>
		<location id="id8" x="-144" y="-340">
			<name x="-195" y="-348">Lane</name>
		</location>
		<location id="id9" x="493" y="34">
			<name x="510" y="25">Archiv</name>
		</location>
		<location id="id10" x="493" y="-255">
			<name x="510" y="-263">Anteroom</name>
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id5"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-433" y="-212">get_book[target_customer[id]]!</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="guard" x="-433" y="-17">time&gt;=leave_archiv_time &amp;&amp;
target_customer[id]!=-1</label>
			<label kind="synchronisation" x="-433" y="-34">leave_archiv[target_archiv[id]]!</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id6"/>
			<label kind="guard" x="25" y="76">time&gt;=search_archiv_time</label>
			<label kind="assignment" x="25" y="42">is_archiv_occupied[target_archiv[id]]=false,
time=0</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="guard" x="-136" y="-153">time&gt;=leave_archiv_time &amp;&amp;
target_customer[id]==-1</label>
			<label kind="synchronisation" x="-136" y="-170">leave_archiv[target_archiv[id]]!</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="guard" x="161" y="-178">is_archiv_occupied[target_archiv[id]]==false &amp;&amp; 
wait_id==lowest_id[target_archiv[id]]</label>
			<label kind="synchronisation" x="161" y="-195">leave_anteroom[target_archiv[id]]!</label>
			<label kind="assignment" x="161" y="-144">is_archiv_occupied[target_archiv[id]]=true,
lowest_id[target_archiv[id]]=
(lowest_id[target_archiv[id]]+1)%ROBOTS,
time=0</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id10"/>
			<label kind="guard" x="170" y="-340">can_enter_anteroom[target_archiv[id]]==true</label>
			<label kind="assignment" x="170" y="-323">can_enter_anteroom[target_archiv[id]]=false,
wait_id=heighest_id[target_archiv[id]],
heighest_id[target_archiv[id]]=
(heighest_id[target_archiv[id]]+1)% ROBOTS</label>
			<nail x="493" y="-340"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-136" y="-314">enter_lane[id]?</label>
			<label kind="assignment" x="-136" y="-297">is_archivist_in_lane[target_lane[id]]=true</label>
		</transition>
	</template>
	<template>
		<name>LaneEntry</name>
		<parameter>const robotid_t id</parameter>
		<declaration>laneid_t internal;
int internal_customer;
clock time;</declaration>
		<location id="id11" x="-9" y="144">
			<name x="-119" y="136">Lane_entered</name>
		</location>
		<location id="id12" x="-9" y="0">
			<name x="-60" y="-8">Pool</name>
		</location>
		<location id="id13" x="289" y="0">
			<name x="306" y="-8">Lane_approved</name>
		</location>
		<location id="id14" x="289" y="144">
			<name x="306" y="136">Lane_reserved</name>
		</location>
		<init ref="id12"/>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-187" y="59">leave_archiv[internal/M]?</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id11"/>
			<label kind="guard" x="25" y="144">time&gt;=enter_lane_time</label>
			<label kind="synchronisation" x="25" y="127">enter_lane[id]!</label>
			<label kind="assignment" x="25" y="161">target_archiv[id]=internal/M,
target_lane[id]=internal,
target_customer[id]=internal_customer</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="297" y="51">reserve_lane[internal]!</label>
			<label kind="assignment" x="298" y="68">time=0</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="17" y="-25">approve_lane?</label>
			<label kind="assignment" x="17" y="0">internal=drive_to,
internal_customer=drive_to_customer</label>
		</transition>
	</template>
	<template>
		<name>Supervisor</name>
		<parameter>const id_t id</parameter>
		<declaration>int take_lane = 0;
int customer_id;</declaration>
		<location id="id15" x="-289" y="-144">
			<name x="-357" y="-144">Waiting</name>
		</location>
		<location id="id16" x="-289" y="-289">
			<name x="-348" y="-314">Ready</name>
		</location>
		<init ref="id15"/>
		<transition>
			<source ref="id16"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="-272" y="-306">approve_lane!</label>
			<label kind="assignment" x="-272" y="-289">drive_to=id*M+take_lane,
drive_to_customer=customer_id</label>
			<nail x="-42" y="-289"/>
			<nail x="-42" y="-144"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="guard" x="-442" y="-238">missing_books[id]&gt;0</label>
			<label kind="synchronisation" x="-442" y="-255">return_book?</label>
			<label kind="assignment" x="-442" y="-221">customer_id=-1,
missing_books[id]--</label>
			<nail x="-289" y="-221"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="guard" x="-731" y="-289">missing_books[id]&lt;MAX_NUMBER_OF_BOOKS_PER_ROOM</label>
			<label kind="synchronisation" x="-731" y="-306">borrow_book?</label>
			<label kind="assignment" x="-731" y="-272">customer_id=customer,
missing_books[id]++</label>
			<nail x="-739" y="-144"/>
			<nail x="-739" y="-289"/>
		</transition>
	</template>
	<system>// List one or more processes to be composed into a system.
system Lane, Supervisor, Archivist, LaneEntry, Anteroom, Customer;</system>
	<queries>
		<query>
			<formula>E&lt;&gt; (Archivist(0).Anteroom imply Archivist(0).Archiv)
			</formula>
			<comment>Man kommt vom Wartezimmer ins Archiv
			</comment>
		</query>
		<query>
			<formula>A&lt;&gt; (Lane(0).Occupied imply Lane(0).Empty)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] (counter_archivists[0] &lt;= ROBOTS)
			</formula>
			<comment>Der Counter an Archivists ist immer kleiner gleich Anzahl Roboter
			</comment>
		</query>
		<query>
			<formula>A[] (book_counter[0] &lt;= (MAX_NUMBER_OF_BOOKS_PER_ROOM*N))
			</formula>
			<comment>Der BookCounter ist immer kleiner gleich der gesamten Bücher
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (LaneEntry(0).Pool imply LaneEntry(0).Lane_entered)
			</formula>
			<comment>Man kommt vom Pool in Lane_entered
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (Archivist(0).Lane imply Archivist(0).Anteroom)
			</formula>
			<comment>Man kommt von LAne nach Anteroom
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (Archivist(0).Pool imply Archivist(0).Anteroom)
			</formula>
			<comment>Man kommt von Pool nach Anteroom
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (Archivist(0).Archiv imply Archivist(0).Pool)
			</formula>
			<comment>Man kommt vom Archiv in den Pool
			</comment>
		</query>
		<query>
			<formula>A[] (missing_books[0] &lt;= MAX_NUMBER_OF_BOOKS_PER_ROOM)
			</formula>
			<comment>Die Anzahl der missing Books ist immer kleiner gleich der maximalen Anzahl der Bücher eines zimmers
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Archivist(0).Anteroom
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Archivist(0).Archiv
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; LaneEntry(0).Pool
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; LaneEntry(0).Lane_approved
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; LaneEntry(0).Lane_reserved
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; LaneEntry(0).Lane_entered
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Supervisor(0).Waiting
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Supervisor(0).Ready
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Archivist(0).Customer
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Archivist(0).Pool
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Archivist(0).Exit
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Archivist(0).Lane
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Lane(0).Occupied
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Lane(0).Empty
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Anteroom(0).Anteroom_Counter
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Customer(0).Book_Loan_Step
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Customer(0).Book_Loan
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] not deadlock
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
